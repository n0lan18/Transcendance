# Generated by Django 4.2.19 on 2025-02-07 13:26

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='profile_photos/')),
                ('isConnect', models.BooleanField(default=False)),
                ('match_history', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(), default=list, size=None)),
                ('friends', models.ManyToManyField(blank=True, related_name='user_friends', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TournamentUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tabPlayers', models.JSONField(default=list)),
                ('tabPlayersNewRound', models.JSONField(default=list)),
                ('numberMatchPlayed', models.IntegerField(default=0)),
                ('courtColor', models.CharField(default='0xCF5A30', max_length=8)),
                ('sizeTournament', models.IntegerField(default=0)),
                ('superPower', models.CharField(default='isSuperPower', max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OnlinePlayers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('connected_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MatchUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username1', models.CharField(default='Player1', max_length=20)),
                ('username2', models.CharField(default='Player2', max_length=20)),
                ('colorPlayer1', models.CharField(default='#E23F22', max_length=8)),
                ('colorPlayer2', models.CharField(default='#3BB323', max_length=8)),
                ('heroPowerPlayer1', models.CharField(default='Invisible', max_length=20)),
                ('heroPowerPlayer2', models.CharField(default='Super strength', max_length=20)),
                ('typeOfGame', models.CharField(default='multiplayer', max_length=20)),
                ('numberPlayers', models.IntegerField(default=0)),
                ('modeGame', models.CharField(default='multiPlayerTwo', max_length=40)),
                ('superPower', models.CharField(default='isSuperPower', max_length=20)),
                ('courtColor', models.CharField(default='0xCF5A30', max_length=8)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MatchHistoryUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username1', models.CharField(default='Player1', max_length=20)),
                ('username2', models.CharField(default='Player2', max_length=20)),
                ('heroPlayer1', models.CharField(default='Invisible', max_length=20)),
                ('heroPlayer2', models.CharField(default='Super strength', max_length=20)),
                ('numberGameBreaker', models.IntegerField(default=0)),
                ('echangeLong', models.IntegerField(default=0)),
                ('dureeMatch', models.FloatField(default=0.0)),
                ('vainqueur', models.CharField(default='Player1', max_length=20)),
                ('dates', models.DateField(default=datetime.date.today)),
                ('isSuperPower', models.CharField(default='isSuperPower', max_length=20)),
                ('scores', models.CharField(default='0-0', max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_history_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GameStatsLocal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scores', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), default=list, size=None)),
                ('resultats', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=10), default=list, size=None)),
                ('dates', django.contrib.postgres.fields.ArrayField(base_field=models.DateField(default=datetime.date.today), blank=True, default=list, size=None)),
                ('numberSimpleMatch', models.IntegerField(default=0)),
                ('numberVictorySimpleMatch', models.IntegerField(default=0)),
                ('numberTournament', models.IntegerField(default=0)),
                ('numberMatchTournament', models.IntegerField(default=0)),
                ('numberVictoryMatchTournament', models.IntegerField(default=0)),
                ('numberVictoryTournament', models.IntegerField(default=0)),
                ('heroInvisible', models.IntegerField(default=0)),
                ('heroDuplication', models.IntegerField(default=0)),
                ('heroSuperstrength', models.IntegerField(default=0)),
                ('heroTimelaps', models.IntegerField(default=0)),
                ('numberGoalsWin', models.IntegerField(default=0)),
                ('numberGoalLose', models.IntegerField(default=0)),
                ('bestResultTournament', models.IntegerField(default=64)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_stats', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
